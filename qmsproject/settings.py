"""
Django settings for qmsproject project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from django.contrib.messages import constants as messages
import environ
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False)
)


# Take environment variables from .env file
environ.Env.read_env(BASE_DIR / '.env')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

#SECURITY WARNING: keep the secret key used in production secret!
#SECRET_KEY = env('SECRET_KEY')
SECRET_KEY = "django-insecure-5ws$4ixsm6(tt9yqvjqyz_r0uvez!$e$739#21adxfs2us$dcr"

# SECURITY WARNING: don't run with debug turned on in production!

#DEBUG = env('DEBUG')
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "core",
    "accounts",
    "anagrafiche",
    "human_resources",
    "acquistopelli",
    "articoli",
    "manualeprocedure",
    "monitoraggi",
    "manutenzioni",
    "lwg",
    "autorizzazioni",
    "gestionerifiuti",
    "nonconformity",
    "chem_man",
    
    "bootstrap5",
    "crispy_forms",
    "crispy_bootstrap5",
    "django_countries",
    "django_filters",
    'widget_tweaks',
    'django.contrib.humanize',
    'django_seed',
    
]

GEOPOSITION_GOOGLE_MAPS_API_KEY = 'AIzaSyABpaqJWTsy7WGjWckbKcjYHJ3sk2AI-Hw'


CRISPY_TEMPLATE_PACK = "bootstrap5"
# La prossima variabile serve per fare in modo che Crispy avvisi in caso di errore
CRISPY_FAIL_SILENTLY = not DEBUG

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "qmsproject.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, 'templates'),
                    os.path.join(BASE_DIR, 'accounts/templates'),
                    os.path.join(BASE_DIR, 'userprofile/templates'),
                    os.path.join(BASE_DIR, 'core/templates'),
                    os.path.join(BASE_DIR, 'human_resources/templates'),
                    os.path.join(BASE_DIR, 'acquistopelli/templates'),
                    os.path.join(BASE_DIR, 'articoli/templates'),
                    os.path.join(BASE_DIR, 'manualeprocedure/templates'),
                    os.path.join(BASE_DIR, 'monitoraggi/templates'),
                    os.path.join(BASE_DIR, 'manutenzioni/templates'),
                    os.path.join(BASE_DIR, 'lwg/templates'),
                    os.path.join(BASE_DIR, 'autorizzazioni/templates'),
                    os.path.join(BASE_DIR, 'gestionerifiuti/templates'),
                    os.path.join(BASE_DIR, 'nonconformity/templates'),
                    os.path.join(BASE_DIR, 'chem_man/templates'),
        ]
                ,
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "qmsproject.context_processors.nome_sito",
            ],
        },
    },
]

WSGI_APPLICATION = "qmsproject.wsgi.application"

FIXTURES = [
    'autorizzazioni/fixtures/data.json',
    'manualeprocedure/fixtures/data.json'
]

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "it"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"
STATICFILES_DIRS = [
    BASE_DIR / 'static'
    ]
MEDIA_ROOT='/home/stefano/Documenti/dev/QMSProject/media-serve/'
#MEDIA_ROOT = os.path.join(BASE_DIR, '/media-serve')
#MEDIA_ROOT = '/home/django/media-serve/'
MEDIA_URL = '/media/'



MESSAGE_TAGS = {
        messages.DEBUG: 'secondary',
        messages.INFO: 'info',
        messages.SUCCESS: 'success',
        messages.WARNING: 'warning',
        messages.ERROR: 'danger',
 }

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'